{"version":3,"sources":["../../out/dialog/item-dialog.js"],"names":["define","require","exports","React","ui","Object","defineProperty","value","ItemDialog","props","confirmButtonText","cancelButtonText","state","item","render","console","assert","title","createElement","className","ref","e","element","type","bind","style","marginTop","onClick","confirm","validator","check","assign","hideDialog","confirmCallback","arg1","arg2","arg3","clearErrors","setState","showDialog","Component"],"mappings":"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","sourcesContent":["define([\"require\", \"exports\", \"react\", \"maishu-ui-toolkit\"], function (require, exports, React, ui) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    class ItemDialog extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.confirmButtonText = \"保存\";\r\n            this.cancelButtonText = \"取消\";\r\n            this.state = { item: {} };\r\n            let render = this.render;\r\n            console.assert(render != null);\r\n            this.render = () => {\r\n                let { title, item } = this.state || {};\r\n                if (item == null)\r\n                    item = {};\r\n                return React.createElement(\"div\", { className: \"modal fade\", ref: e => this.element = e || this.element },\r\n                    React.createElement(\"div\", { className: \"modal-dialog\" },\r\n                        React.createElement(\"div\", { className: \"modal-content\" },\r\n                            React.createElement(\"div\", { className: \"modal-header\" },\r\n                                React.createElement(\"button\", { type: \"button\", className: \"close\", \"data-dismiss\": \"modal\" },\r\n                                    React.createElement(\"span\", { \"aria-hidden\": \"true\" }, \"\\u00D7\"),\r\n                                    React.createElement(\"span\", { className: \"sr-only\" }, \"Close\")),\r\n                                React.createElement(\"h4\", { className: \"modal-title\" }, title || \"\")),\r\n                            React.createElement(\"div\", { className: \"modal-body\" }, render.bind(this)()),\r\n                            React.createElement(\"div\", { className: \"modal-footer\", style: { marginTop: 0 } },\r\n                                React.createElement(\"button\", { type: \"button\", className: \"btn btn-default\", \"data-dismiss\": \"modal\" }, this.cancelButtonText),\r\n                                React.createElement(\"button\", { type: \"button\", className: \"btn btn-primary\", onClick: () => this.confirm() }, this.confirmButtonText)))));\r\n            };\r\n        }\r\n        confirm() {\r\n            if (this.validator && !this.validator.check())\r\n                return;\r\n            let { item } = this.state;\r\n            Object.assign(this.item, item);\r\n            ui.hideDialog(this.element);\r\n            if (this.confirmCallback)\r\n                this.confirmCallback(item);\r\n        }\r\n        show(arg1, arg2, arg3) {\r\n            let item, title, confirm;\r\n            if (typeof arg1 == \"string\") {\r\n                title = arg1;\r\n                confirm = arg2;\r\n            }\r\n            else {\r\n                item = arg1;\r\n                title = arg2;\r\n                confirm = arg3;\r\n            }\r\n            if (this.validator)\r\n                this.validator.clearErrors();\r\n            this.item = item;\r\n            this.confirmCallback = confirm;\r\n            this.setState({ item: Object.assign({}, item), title }, () => {\r\n                ui.showDialog(this.element);\r\n            });\r\n        }\r\n    }\r\n    exports.ItemDialog = ItemDialog;\r\n});\r\n"],"file":"item-dialog.js"}