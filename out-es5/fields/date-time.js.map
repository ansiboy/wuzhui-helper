{"version":3,"sources":["../../out/fields/date-time.js"],"names":["define","require","exports","maishu_wuzhui_1","Object","defineProperty","value","dateTimeField","args","field","DateTimeField","validateRules","r","assign","headerStyle","textAlign","width","itemStyle","emptyText","ctrl","VALUE","get","str","element","Date","parse","err","set","toDateTimeString","placeholder","className","dataItem","cell","formatValue","BoundField","datetime","d","month","getMonth","length","date","getDate","hours","getHours","minutes","getMinutes","getFullYear"],"mappings":"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","sourcesContent":["define([\"require\", \"exports\", \"maishu-wuzhui\"], function (require, exports, maishu_wuzhui_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function dateTimeField(args) {\r\n        let field = new DateTimeField(args);\r\n        let validateRules = {\r\n            validateRules: args.validateRules\r\n        };\r\n        let r = Object.assign(field, validateRules);\r\n        return r;\r\n    }\r\n    exports.dateTimeField = dateTimeField;\r\n    class DateTimeField extends maishu_wuzhui_1.BoundField {\r\n        constructor(args) {\r\n            super(Object.assign({\r\n                headerStyle: { textAlign: 'center', width: '160px' },\r\n                itemStyle: { textAlign: 'center', width: `160px` }\r\n            }, args));\r\n            this.emptyText = args.emptyText;\r\n        }\r\n        createControl() {\r\n            let ctrl = super.createControl();\r\n            let VALUE = \"value\";\r\n            Object.defineProperty(ctrl, VALUE, {\r\n                get() {\r\n                    let str = ctrl.element.value;\r\n                    let value;\r\n                    try {\r\n                        value = new Date(Date.parse(str));\r\n                    }\r\n                    catch (err) {\r\n                    }\r\n                    return value;\r\n                },\r\n                set(value) {\r\n                    let str = toDateTimeString(value);\r\n                    ctrl.element.value = str;\r\n                }\r\n            });\r\n            if (this.emptyText)\r\n                ctrl.element.placeholder = this.emptyText;\r\n            ctrl.element.className = \"form-control\";\r\n            return ctrl;\r\n        }\r\n        createItemCell(dataItem) {\r\n            let cell = super.createItemCell(dataItem);\r\n            cell.formatValue = function (value) {\r\n                return toDateTimeString(value);\r\n            };\r\n            return cell;\r\n        }\r\n    }\r\n    function toDateTimeString(datetime) {\r\n        if (datetime == null)\r\n            return null;\r\n        if (typeof datetime == \"string\") {\r\n            datetime = new Date(datetime);\r\n        }\r\n        let d;\r\n        if (typeof datetime == 'number')\r\n            d = new Date(datetime);\r\n        else\r\n            d = datetime;\r\n        let month = `${d.getMonth() + 1}`;\r\n        month = month.length == 1 ? '0' + month : month;\r\n        let date = `${d.getDate()}`;\r\n        date = date.length == 1 ? '0' + date : date;\r\n        let hours = `${d.getHours()}`;\r\n        hours = hours.length == 1 ? '0' + hours : hours;\r\n        let minutes = `${d.getMinutes()}`;\r\n        minutes = minutes.length == 1 ? '0' + minutes : minutes;\r\n        return `${d.getFullYear()}-${month}-${date} ${hours}:${minutes}`;\r\n    }\r\n    exports.toDateTimeString = toDateTimeString;\r\n});\r\n"],"file":"date-time.js"}