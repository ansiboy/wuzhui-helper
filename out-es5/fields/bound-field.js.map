{"version":3,"sources":["../../out/fields/bound-field.js"],"names":["Object","defineProperty","exports","value","w","require","errors_1","boundField","params","errors","argumentNull","headerStyle","assign","textAlign","nullText","field","BoundField","validateRules","r","createControl","ctrl","apply","emptyText","element","placeholder","className"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,CAAC,GAAGC,OAAO,CAAC,eAAD,CAAjB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,SAASE,UAAT,CAAoBC,MAApB,EAA4B;AACxB,MAAI,CAACA,MAAL,EACI,MAAMF,QAAQ,CAACG,MAAT,CAAgBC,YAAhB,CAA6B,QAA7B,CAAN;AACJF,EAAAA,MAAM,CAACG,WAAP,GAAqBX,MAAM,CAACY,MAAP,CAAc;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAd,EAAuCL,MAAM,CAACG,WAAP,IAAsB,EAA7D,CAArB;AACA,MAAIH,MAAM,CAACM,QAAP,IAAmB,IAAvB,EACIN,MAAM,CAACM,QAAP,GAAkB,EAAlB;AACJ,MAAIC,KAAK,GAAG,IAAIX,CAAC,CAACY,UAAN,CAAiBR,MAAjB,CAAZ;AACA,MAAIS,aAAa,GAAG;AAChBA,IAAAA,aAAa,EAAET,MAAM,CAACS;AADN,GAApB;AAGA,MAAIC,CAAC,GAAGlB,MAAM,CAACY,MAAP,CAAcG,KAAd,EAAqBE,aAArB,CAAR;AACA,MAAIE,aAAa,GAAGJ,KAAK,CAACI,aAA1B;;AACAJ,EAAAA,KAAK,CAACI,aAAN,GAAsB,YAAY;AAC9B,QAAIC,IAAI,GAAGD,aAAa,CAACE,KAAd,CAAoB,IAApB,EAA0B,EAA1B,CAAX;AACA,QAAIb,MAAM,CAACc,SAAX,EACIF,IAAI,CAACG,OAAL,CAAaC,WAAb,GAA2BhB,MAAM,CAACc,SAAlC;AACJF,IAAAA,IAAI,CAACG,OAAL,CAAaE,SAAb,GAAyB,cAAzB;AACA,WAAOL,IAAP;AACH,GAND;;AAOA,SAAOF,CAAP;AACH;;AACDhB,OAAO,CAACK,UAAR,GAAqBA,UAArB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst w = require(\"maishu-wuzhui\");\r\nconst errors_1 = require(\"../errors\");\r\nfunction boundField(params) {\r\n    if (!params)\r\n        throw errors_1.errors.argumentNull('params');\r\n    params.headerStyle = Object.assign({ textAlign: 'center' }, params.headerStyle || {});\r\n    if (params.nullText == null)\r\n        params.nullText = '';\r\n    let field = new w.BoundField(params);\r\n    let validateRules = {\r\n        validateRules: params.validateRules\r\n    };\r\n    let r = Object.assign(field, validateRules);\r\n    let createControl = field.createControl;\r\n    field.createControl = function () {\r\n        let ctrl = createControl.apply(this, []);\r\n        if (params.emptyText)\r\n            ctrl.element.placeholder = params.emptyText;\r\n        ctrl.element.className = \"form-control\";\r\n        return ctrl;\r\n    };\r\n    return r;\r\n}\r\nexports.boundField = boundField;\r\n"],"file":"bound-field.js"}